/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaticket_hectorflores;

import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author hecto
 */
public class crearEvento extends javax.swing.JFrame {

    /**
     * Creates new form crearEvento
     */
    public crearEvento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        codigo = new javax.swing.JTextField();
        titulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fecha = new com.toedter.calendar.JCalendar();
        confirmar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        renta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        asistentes = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        descripcion.setColumns(20);
        descripcion.setRows(5);
        jScrollPane1.setViewportView(descripcion);

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Codigo del evento:");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Titulo del evento:");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Descripcion del evento:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Fecha del evento:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Crear un evento");

        confirmar.setText("Confirmar");
        confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Renta acordada:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Personas a asistir");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmar)
                    .addComponent(cancelar)
                    .addComponent(titulo)
                    .addComponent(jLabel2)
                    .addComponent(renta, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(asistentes, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(renta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(asistentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static ArrayList <String> codigosCreados = new ArrayList<>();
    
    private boolean encontrarCodigo(ArrayList <String> codes, String target){
        boolean valid = true;
        
        for (int i = 0; i < codes.size(); i++) {
            if (codes.get(i).equalsIgnoreCase(target)){
                valid = false;
            }
        }
        
        return valid;
    }
    
    public boolean encontrarCodigo(String target){
        return encontrarCodigo(codigosCreados, target);
    }
    
    private boolean verificarIntText(String texto, int pos){
        if (pos > texto.length() - 1){
            return true;
        } else if ((int)texto.charAt(pos) >= 48 && (int)texto.charAt(pos) <= 57){
            return verificarIntText(texto, pos + 1);
        } else {
            return false;
        }
    }
    
    public boolean verificarIntText(String texto){
        return verificarIntText(texto, 0);
    }
    
    static ArrayList <evento> masterEvents = new ArrayList<>();
    
    private void confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarActionPerformed
        String code = codigo.getText();
        String title = titulo.getText();
        String description = descripcion.getText();
        Calendar date = fecha.getCalendar();
        String renta_s = renta.getText();
        String asistentes_s = asistentes.getText();
        
        Calendar hoy = Calendar.getInstance();
        int max;
        int asistentes = 0;
        
        if (administracionDeEventos.tipo == 1){
            max = 20000;
        } else if (administracionDeEventos.tipo == 2){
            max = 25000;
        } else {
            max = 30000;
        }
        
        if (verificarIntText(asistentes_s)){
            asistentes = Integer.parseInt(asistentes_s);
            
            if (asistentes <= max && date.after(hoy)){
                try {
                    if (encontrarCodigo(code)){
                        double renta = Double.parseDouble(renta_s);
                        codigosCreados.add(code);

                        if (administracionDeEventos.tipo == 1){
                            String equipo1 = JOptionPane.showInputDialog("Ingrese el nombre del equipo 1");
                            String equipo2 = JOptionPane.showInputDialog("Ingrese el nombre del equipo 2");

                            deportivo.deportes deporte_enum = deportivo.deportes.valueOf(administracionDeEventos.deporte);
                            deportivo evento = new deportivo(code, title,description, date, renta, "No realizado", deporte_enum, equipo1, equipo2);
                            if (login.loggedInUser instanceof admin){
                                ((login.adminUser).getEventos()).add(evento);
                            } else {
                                ((login.contentUser).getEventos()).add(evento);
                            }
                            masterEvents.add(evento);
                            JOptionPane.showMessageDialog(null, "Evento creado exitosamente!");

                        } else if (administracionDeEventos.tipo == 2){
                            musical.generos genero_enum = musical.generos.valueOf(administracionDeEventos.genero);
                            musical evento = new musical(code, title, description, date, renta, "No realizado", genero_enum);
                            if (login.loggedInUser instanceof admin){
                                ((login.adminUser).getEventos()).add(evento);
                            } else {
                                ((login.contentUser).getEventos()).add(evento);
                            }
                            masterEvents.add(evento);
                            JOptionPane.showMessageDialog(null, "Evento creado exitosamente!");
                        } else {
                            religioso evento = new religioso(code, title, description, date, renta, "No realizado");
                            
                            if (login.loggedInUser instanceof admin){
                                ((login.adminUser).getEventos()).add(evento);
                            } else {
                                ((login.contentUser).getEventos()).add(evento);
                            }
                            masterEvents.add(evento);
                            JOptionPane.showMessageDialog(null, "Evento creado exitosamente!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El evento que desea calendarizar posee un codigo que ya ha diso registrado. Intente de nuevo.");
                    }

                    setVisible(false);

                    administracionDeEventos adminEvents = new administracionDeEventos();
                    adminEvents.setVisible(true);
                    adminEvents.setLocationRelativeTo(null);

                } catch (Exception e){
                    JOptionPane.showMessageDialog(null, "Verifique que todos los campos ingresados sean validos y que esten llenados.");
                }
            } else if (asistentes > max){
                JOptionPane.showMessageDialog(null, "Verifique que el numero de asistentes sea valido\nDeportivo 20,000\nMusical 25,000\nReligioso 30,000");
            } else if (date.before(hoy) || date.get(Calendar.DAY_OF_YEAR) == hoy.get(Calendar.DAY_OF_YEAR)){
                JOptionPane.showMessageDialog(null, "Elija una fecha que sea mañana o despues");
            }
        }
        
    }//GEN-LAST:event_confirmarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        setVisible(false);
        
        administracionDeEventos adminEvents = new administracionDeEventos();
        adminEvents.setVisible(true);
        adminEvents.setLocationRelativeTo(null);
    }//GEN-LAST:event_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField asistentes;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField codigo;
    private javax.swing.JButton confirmar;
    private javax.swing.JTextArea descripcion;
    private com.toedter.calendar.JCalendar fecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField renta;
    private javax.swing.JTextField titulo;
    // End of variables declaration//GEN-END:variables
}
