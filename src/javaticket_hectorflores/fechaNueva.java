/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaticket_hectorflores;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author hecto
 */
public class fechaNueva extends javax.swing.JFrame {

    /**
     * Creates new form fechaNueva
     */
    public fechaNueva() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        calendario1 = new com.toedter.calendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Ingrese la fecha nueva:");

        confirm.setText("Confirmar");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(calendario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(confirm))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calendario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirm)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static Calendar fechaNueva;
    SimpleDateFormat simple = new SimpleDateFormat("dd-MM-yyyy");
    
    administracionDeEventos eventos = new administracionDeEventos();
    
    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        fechaNueva = calendario1.getCalendar();
        Calendar hoy = Calendar.getInstance();
        
        if (login.loggedInUserType.equals("admin")){
                                    
            admin logged = (admin)login.adminUser;

            if (eventos.adminContains(logged, administracionDeEventos.targetCode)){
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setFecha(fechaNueva);
                String simpleNuevo = simple.format(fechaNueva.getTime());
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setSimple(simpleNuevo);
            } else {
                JOptionPane.showMessageDialog(null, "No puede editar ese evento ya que usted no lo creo");
            }
            
            if (hoy.after(fechaNueva)){
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setEstado("Realizado");
            } else {
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setEstado("No realizado");
            }
            
        } else {
            contenidos logged = (contenidos)login.contentUser;

            if (eventos.contentContains(logged, administracionDeEventos.targetCode)){
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setFecha(fechaNueva);
                String simpleNuevo = simple.format(fechaNueva.getTime());
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setSimple(simpleNuevo);
            } else {
                JOptionPane.showMessageDialog(null, "No puede editar ese evento ya que usted no lo creo");
            }
            
            if (hoy.after(fechaNueva)){
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setEstado("Realizado");
            } else {
                logged.getEventos().get(eventos.encontrarPosCodigoEvento(administracionDeEventos.targetCode, logged.getEventos())).setEstado("No realizado");
            }

        }
        
        
        setVisible(false);
        
        administracionDeEventos eventos = new administracionDeEventos();
        eventos.setVisible(true);
        eventos.setLocationRelativeTo(null);
        JOptionPane.showMessageDialog(null, "Cambios hechos!");
        
    }//GEN-LAST:event_confirmActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar calendario1;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
